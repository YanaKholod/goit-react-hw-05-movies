{"version":3,"file":"static/js/680.658f7504.chunk.js","mappings":"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","sources":["api.js","components/SharedLayout/LoadingPoints.jsx","components/SharedLayout/StyledSharedLayout.js","components/MovieCard/StyledMovieCard.js","components/MovieCard/MovieCard.jsx","pages/StyledMovieDetails.js","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca';\n\nexport const fetchTrendMovies = async () => {\n  const response = await fetch(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await fetch(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const data = await response.json();\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await fetch(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await response.json();\n\n  return data;\n};\nexport const fetchMovieCast = async movieId => {\n  const response = await fetch(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await response.json();\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const data = await response.json();\n\n  return data;\n};\n","import React from 'react';\nimport { Styled } from '../SharedLayout/StyledSharedLayout';\n\nconst LoadingPoints = () => {\n  return (\n    <Styled.Points>\n      <Styled.Point delay=\"0s\" />\n      <Styled.Point delay=\".2s\" />\n      <Styled.Point delay=\".4s\" />\n    </Styled.Points>\n  );\n};\n\nexport default LoadingPoints;\n","import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst bounce = keyframes` 0%, 80%, 100% {\n  transform: scale(0);\n}\n40% {\n  transform: scale(1);\n}`;\n\nexport const Styled = {\n  Points: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  `,\n  Point: styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 50%;\n    background-color: #1c85ff;\n    animation: ${bounce} 1s infinite ease-in-out;\n    animation-delay: ${({ delay }) => delay};\n  `,\n  Link: styled(NavLink)`\n    display: inline-block;\n    font-size: 24px;\n    font-weight: 500;\n    text-decoration: none;\n    transition: color 0.2s ease-in-out;\n    color: #000000;\n    &:not(:last-child) {\n      margin-right: 40px;\n    }\n    &.active,\n    &:hover,\n    &:focus {\n      color: #1c85ff;\n      text-decoration: underline;\n    }\n  `,\n  Header: styled.header`\n    padding: 20px 30px;\n    text-align: center;\n  `,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Styled = {\n  Wrapper: styled.div`\n    display: flex;\n    gap: 40px;\n    margin-top: 20px;\n  `,\n  Img: styled.img`\n    height: 600px;\n    width: 400px;\n  `,\n  Info: styled.div`\n    padding-top: 20px;\n    max-width: 1100px;\n  `,\n  Name: styled.div`\n    margin-bottom: 20px;\n  `,\n  InfoText: styled.p`\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  `,\n  InfoTextBold: styled.span`\n    display: block;\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: 500;\n  `,\n  MoreInfo: styled.div`\n    margin-top: 20px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    border-top: 1px solid #d3d3d3;\n    border-bottom: 1px solid #d3d3d3;\n  `,\n  MoreInfoHeader: styled.h3`\n    font-size: 25px;\n    font-weight: 500;\n  `,\n  List: styled.ul`\n    margin-top: 20px;\n    display: flex;\n    gap: 20px;\n    font-size: 18px;\n  `,\n  ListItem: styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `,\n  Link: styled(Link)`\n    font-size: 16px;\n    margin-right: 5px;\n    padding: 5px 15px;\n    border: 1px solid #0d57aa;\n    border-radius: 6px;\n    background-color: #b5d1f2;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    color: #0d57aa;\n    &:hover,\n    &:focus {\n      background-color: #0d57aa;\n      color: #ffffff;\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n    }\n  `,\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LoadingPoints from 'components/SharedLayout/LoadingPoints';\nimport PropTypes from 'prop-types';\nimport { Styled } from './StyledMovieCard';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  if (!title) {\n    return <LoadingPoints />;\n  }\n\n  return (\n    <>\n      <Styled.Wrapper>\n        <Styled.Img src={posterUrl} alt={`${title} poster`} />\n\n        <Styled.Info>\n          <Styled.Name>\n            {title ?? 'Unknown'} ({releaseYear})\n          </Styled.Name>\n          <Styled.InfoText>User Score: {userScore}</Styled.InfoText>\n          <Styled.InfoText>\n            <Styled.InfoTextBold>Overview:</Styled.InfoTextBold> {overview}\n          </Styled.InfoText>\n          {genres && genres.length > 0 && (\n            <Styled.InfoText>\n              <Styled.InfoTextBold>Genres:</Styled.InfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </Styled.InfoText>\n          )}\n        </Styled.Info>\n      </Styled.Wrapper>\n      <Styled.MoreInfo>\n        <Styled.MoreInfoHeader>Additional information</Styled.MoreInfoHeader>\n        <Styled.List>\n          <Styled.ListItem>\n            <Styled.Link\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </Styled.Link>\n          </Styled.ListItem>\n          <Styled.ListItem>\n            <Styled.Link\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </Styled.Link>\n          </Styled.ListItem>\n        </Styled.List>\n      </Styled.MoreInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const Styled = {\n  Wrapper: styled.div`\n    padding: 20px 40px;\n  `,\n  Button: styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    width: max-content;\n    padding: 10px;\n    border: 1px solid #0d57aa;\n    border-radius: 6px;\n    background-color: #b5d1f2;\n    transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\n    &:hover,\n    &:focus {\n      background-color: #0d57aa;\n      color: #ffffff;\n    }\n  `,\n};\n","import React, { Suspense, useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { fetchMovieById } from 'api';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport LoadingPoints from 'components/SharedLayout/LoadingPoints';\nimport { Styled } from './StyledMovieDetails';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n  return (\n    <main>\n      <Styled.Wrapper>\n        <Link to={location?.state?.from ?? '/'}>\n          <Styled.Button type=\"button\">Go back</Styled.Button>\n        </Link>\n        <MovieCard movie={selectedMovie} />\n        <Suspense fallback={<LoadingPoints />}>\n          <Outlet />\n        </Suspense>\n      </Styled.Wrapper>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["baseURL","API_KEY","fetchTrendMovies","fetch","response","json","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews","delay","bounce","keyframes","Styled","Points","styled","Point","Link","NavLink","Header","Wrapper","Img","Info","Name","InfoText","InfoTextBold","MoreInfo","MoreInfoHeader","List","ListItem","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","LoadingPoints","Button","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","movieData","console","log","type","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}